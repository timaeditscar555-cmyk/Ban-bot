import telebot
import time
import random

TOKEN = "8219415257:AAEjAb5dfVrs7Cw0O_-8RpQjXmbPNC0bOC0"
bot = telebot.TeleBot(TOKEN)

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ =====
BAD_WORDS = ["–¥—É—Ä–∞–∫", "–∏–¥–∏–æ—Ç", "—Å—É–∫–∞", "–±–ª—è–¥—å", "—Ç–≤–∞—Ä—å", "–Ω–∞—Ö—É–π", "–ø–∏–¥–æ—Ä", "–µ–±–ª–∞–Ω"]
SPAM_TRIGGERS = ["http", "t.me", "@", "—Å–∫–∏–¥–∫–∏", "–±–µ—Å–ø–ª–∞—Ç–Ω–æ"]

violations = {}  # {user_id: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π}
last_message_time = {}  # –¥–ª—è –∞–Ω—Ç–∏—Ñ–ª—É–¥–∞

# ===== –ü—Ä–∞–≤–∏–ª–∞ =====
rules_text = """
üìú –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞:
1Ô∏è‚É£ –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è ‚Äî –º—É—Ç –Ω–∞ 1 –¥–µ–Ω—å.
2Ô∏è‚É£ –°–ø–∞–º / —Ñ–ª—É–¥ ‚Äî –º—É—Ç –Ω–∞ 3 –¥–Ω—è.
3Ô∏è‚É£ –ß–∞—Å—Ç—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è ‚Äî –±–∞–Ω –∏–ª–∏ –≤–µ—á–Ω—ã–π –º—É—Ç.
4Ô∏è‚É£ –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø–æ—Å–ª–µ —Ä–∞–∑–±–∞–Ω–∞ ‚Äî –∂—ë—Å—Ç–∫–∏–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è.
"""

@bot.message_handler(commands=["start", "rules"])
def start(msg):
    bot.reply_to(msg, rules_text)


# ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π =====
@bot.message_handler(func=lambda message: True, content_types=['text'])
def check_message(message):
    user_id = message.from_user.id
    username = message.from_user.first_name
    text = message.text.lower()
    now = time.time()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª—É–¥
    if user_id in last_message_time and now - last_message_time[user_id] < 2:
        handle_violation(message, "–§–ª—É–¥", 3)
        return
    last_message_time[user_id] = now

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞
    if any(word in text for word in BAD_WORDS):
        handle_violation(message, "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è", 1)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º
    if any(trigger in text for trigger in SPAM_TRIGGERS):
        handle_violation(message, "–°–ø–∞–º", 3)
        return


def handle_violation(message, reason, days):
    user_id = message.from_user.id
    username = message.from_user.first_name
    chat_id = message.chat.id

    # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –Ω–∞—Ä—É—à–µ–Ω–∏–π
    violations[user_id] = violations.get(user_id, 0) + 1
    count = violations[user_id]

    # —à–∞–Ω—Å –≤–µ—á–Ω–æ–≥–æ –º—É—Ç–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ 1 –∫ 10)
    eternal_chance = random.randint(1, 10)

    # ===== –í–µ—á–Ω—ã–π –º—É—Ç =====
    if eternal_chance == 1 and count >= 2:
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=False)
        bot.reply_to(message, f"üíÄ {username}, –ø–æ–ª—É—á–∏–ª –≤–µ—á–Ω—ã–π –º—É—Ç! –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        try:
            bot.send_message(user_id, f"ü§ê –í—ã –ø–æ–ª—É—á–∏–ª–∏ *–≤–µ—á–Ω—ã–π –º—É—Ç* –≤ —á–∞—Ç–µ.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                                      "üí¨ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∞–ø–µ–ª–ª—è—Ü–∏—é.")
        except:
            pass
        return

    # ===== –ü–µ—Ä–≤–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ =====
    if count == 1:
        duration = days * 24 * 60 * 60
        bot.restrict_chat_member(chat_id, user_id, until_date=time.time() + duration, can_send_messages=False)
        bot.reply_to(message, f"‚ö†Ô∏è {username}, –º—É—Ç –Ω–∞ {days} –¥–µ–Ω—å –∑–∞: {reason}")
    # ===== –í—Ç–æ—Ä–æ–µ =====
    elif count == 2:
        duration = 7 * 24 * 60 * 60
        bot.restrict_chat_member(chat_id, user_id, until_date=time.time() + duration, can_send_messages=False)
        bot.reply_to(message, f"üö® {username}, –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚Äî –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π.")
    # ===== –¢—Ä–µ—Ç—å–µ ‚Äî –≤–µ—á–Ω—ã–π –±–∞–Ω =====
    elif count >= 3:
        bot.ban_chat_member(chat_id, user_id)
        bot.send_message(chat_id, f"üí£ {username} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞ –∑–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è.")
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É
        try:
            bot.send_message(user_id, f"üö´ –í–∞—Å *–∑–∞–±–∞–Ω–∏–ª–∏ –Ω–∞–≤—Å–µ–≥–¥–∞* –≤ —á–∞—Ç–µ '{message.chat.title}'.\n"
                                      f"–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                                      "‚õî –ê–ø–µ–ª–ª—è—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        except:
            pass


# ==== –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—â–µ–Ω–∏—è (–∞–¥–º–∏–Ω–∞–º) ====
@bot.message_handler(commands=["forgive"])
def forgive_user(msg):
    """–ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –ø—Ä–æ—Å—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not msg.reply_to_message:
        return bot.reply_to(msg, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥–æ–π /forgive")

    user_id = msg.reply_to_message.from_user.id
    username = msg.reply_to_message.from_user.first_name
    if user_id in violations:
        violations[user_id] = max(0, violations[user_id] - 1)
        bot.reply_to(msg, f"üôè {username} –ø—Ä–æ—â—ë–Ω. –ù–∞—Ä—É—à–µ–Ω–∏—è —É–º–µ–Ω—å—à–µ–Ω—ã.")
    else:
        bot.reply_to(msg, f"üòá {username} –Ω–µ –∏–º–µ–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π.")


# ==== –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ====
print("üõ° –ë–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω...")
while True:
    try:
        bot.polling(none_stop=True, interval=1)
    except Exception as e:
        print("–û—à–∏–±–∫–∞:", e)
        time.sleep(3)